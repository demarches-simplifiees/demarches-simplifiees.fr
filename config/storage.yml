local:
  service: Disk
  root: <%= Rails.root.join("storage") %>
test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>
openstack:
  service: OpenStack
  container: "<%= ENV['FOG_ACTIVESTORAGE_DIRECTORY'] %>"
  credentials:
    openstack_auth_url: "<%= ENV['FOG_OPENSTACK_URL'] %>"
    openstack_api_key: "<%= ENV['FOG_OPENSTACK_API_KEY'] %>"
    openstack_username: "<%= ENV['FOG_OPENSTACK_USERNAME'] %>"
    openstack_region: "<%= ENV['FOG_OPENSTACK_REGION'] %>"
    openstack_temp_url_key: "<%= ENV['FOG_OPENSTACK_TEMP_URL_KEY'] %>"
s3:
  service: S3
  endpoint: "<%= ENV['S3_ENDPOINT'] %>"
  bucket: "<%= ENV.fetch('S3_BUCKET','') %>"
  access_key_id: "<%= ENV['S3_ACCESS_KEY'] %>"
  secret_access_key: "<%= ENV['S3_SECRET_KEY'] %>"
  region: "<%= ENV['S3_REGION'] %>"
  force_path_style: true

new_s3:
  service: S3
  endpoint: "<%= ENV['NEW_S3_ENDPOINT'] %>"
  bucket: "<%= ENV.fetch('NEW_S3_BUCKET','') %>"
  access_key_id: "<%= ENV['NEW_S3_ACCESS_KEY'] %>"
  secret_access_key: "<%= ENV['NEW_S3_SECRET_KEY'] %>"
  region: "<%= ENV['NEW_S3_REGION'] %>"
  force_path_style: true

local_mirror:
  service: Mirror
  primary: local
  mirrors:
    - s3

s3_mirror:
  service: Mirror
  primary: s3
  mirrors:
    - new_s3

amazon:
  service: S3
  access_key_id: <%= ENV.fetch("S3_ACCESS_KEY_ID", "") %>
  secret_access_key: <%= ENV.fetch("S3_SECRET_ACCESS_KEY", "") %>
  region: <%= ENV.fetch("S3_REGION", "") %>
  bucket: <%= ENV.fetch("S3_BUCKET", "") %>
