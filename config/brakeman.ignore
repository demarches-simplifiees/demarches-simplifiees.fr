{
  "ignored_warnings": [
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "0d61a1267d264f1e61cc2398a2683703ac60878129dc9515542f246a80ad575b",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/champs/carto/show.js.erb",
      "line": 5,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "geo_data((Champ.joins(:dossier).where(:dossiers => ({ :user_id => logged_user_ids })).find_by(:id => params.permit(:champ_id)) or CartoChamp.new))",
      "render_path": [{"type":"controller","class":"Champs::CartoController","method":"show","line":48,"file":"app/controllers/champs/carto_controller.rb"}],
      "location": {
        "type": "template",
        "template": "champs/carto/show"
      },
      "user_input": "Champ.joins(:dossier).where(:dossiers => ({ :user_id => logged_user_ids }))",
      "confidence": "Weak",
      "note": "Not an injection because logged_user_ids have no user input"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "1840f5340630814ea86311e850ebd91b966e6bccd0b6856133528e7745c0695a",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/procedure_presentation.rb",
      "line": 90,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "dossiers.order(\"#{sanitized_column(sort)} #{sort[\"order\"]}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProcedurePresentation",
        "method": "sorted_ids"
      },
      "user_input": "sanitized_column(sort)",
      "confidence": "Weak",
      "note": "Not an injection because of `sanitized_column`"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b2feda5e5ae668cdbf0653f134c40bcb9e45499c1b607450e43a0166c4098364",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/procedure_presentation.rb",
      "line": 96,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "dossiers.includes(((\"type_de_champ\" == \"type_de_champ\") ? (:champs) : (:champs_private))).where(\"champs.type_de_champ_id = #{sort[\"column\"].to_i}\").order(\"champs.value #{sort[\"order\"]}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProcedurePresentation",
        "method": "sorted_ids"
      },
      "user_input": "sort[\"order\"]",
      "confidence": "Weak",
      "note": "Not an injection because `sort[\"order\"]` has passed `check_allowed_sort_order`"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "e0e5b55126891df8fe144835ea99367ffd7a92ae6d7227a923fe79f4a79f67f4",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/procedure_presentation.rb",
      "line": 101,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "dossiers.includes(\"user\").order(\"#{sanitized_column(sort)} #{sort[\"order\"]}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProcedurePresentation",
        "method": "sorted_ids"
      },
      "user_input": "sanitized_column(sort)",
      "confidence": "Weak",
      "note": "Not an injection because of `sanitized_column`"
    }
  ],
  "updated": "2018-10-16 11:28:34 +0300",
  "brakeman_version": "4.3.1"
}
