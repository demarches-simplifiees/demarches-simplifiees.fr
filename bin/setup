#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")

  # Install JavaScript dependencies
  system! 'bun --version'
  system! 'bun install'

  if ENV["UPDATE_WEBDRIVER"]
    puts "\n== Updating webdrivers =="
    puts "\nyou must add ~/.local/bin to your path"
    system! 'bunx @puppeteer/browsers clear --path ~/.local/bin/headless_browsers'

    system! 'bunx @puppeteer/browsers install chromedriver --path ~/.local/bin/headless_browsers'
    system! 'bunx @puppeteer/browsers install chrome --path ~/.local/bin/headless_browsers'
    puts "\n if chrome and chromedriver versions are not compatible, add the version you want in the above lines. ex : chrome@121"

    system! 'rm -f ~/.local/bin/chromedriver && ln -s $(find ~/.local/bin/headless_browsers -type f -name chromedriver) ~/.local/bin/chromedriver'
    system! 'rm -f ~/.local/bin/chrome && ln -s $(find ~/.local/bin/headless_browsers -type f -name chrome) ~/.local/bin/chrome'
  end

  puts "\n== Copying sample files =="
  unless File.exist?('.env')
    FileUtils.cp 'config/env.example', '.env'
  end

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Restarting application server =="
  system! "bin/rails restart"
end
