# frozen_string_literal: true

describe 'users/dossiers/dossiers_list', type: :view do
  let(:user) { dossier.user }

  subject do
    @rdvs_for_dossiers = []
    render 'users/dossiers/dossiers_list', dossiers: [dossier], current_user: user
  end
  before do
    [:paginate, :page_entries_info].map { allow(view).to receive(it).and_return("") }
  end
  context 'when procedure is not published and not path (sentry#6394294155)' do
    let(:discarded_procedure) { create(:procedure, :discarded) }
    let(:replaced_procedure) { create(:procedure, :closed, closing_reason: :internal_procedure, replaced_by_procedure: discarded_procedure) }
    let(:dossier) { create(:dossier, :en_construction, procedure: replaced_procedure) }

    it "renders successfully" do
      expect(subject).not_to have_link(commencer_path(replaced_procedure.path))
      expect(subject).not_to have_link(commencer_path(discarded_procedure.path))
    end
  end
end
