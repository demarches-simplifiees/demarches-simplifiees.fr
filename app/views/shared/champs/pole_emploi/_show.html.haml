- if champ.blank?
  %p= t('.not_filled')
- elsif champ.data.blank?
  %p= t('.fetching_data',
    identifiant: champ.identifiant)
- else
  - if profile == 'usager'
    - sources = champ.procedure.api_particulier_sources['pole_emploi'].keys
    - i18n_sources = sources.map { |s| I18n.t("#{s}.libelle", scope: 'api_particulier.providers.pole_emploi.scopes') }
    %p= t('.data_fetched', sources: i18n_sources.to_sentence, identifiant: champ.identifiant)

  - if profile == 'instructeur'
    %p= t('.data_fetched_title')

    - champ.data.slice('identite', 'adresse', 'contact', 'inscription').keys.each do |scope|
      - case scope
      - when 'identite'
        = render partial: 'shared/champs/pole_emploi/identite', locals: { scope: scope, identite: champ.data[scope] }
      - when 'adresse'
        = render partial: 'shared/champs/pole_emploi/adresse', locals: { scope: scope, adresse: champ.data[scope] }
      - when 'contact'
        = render partial: 'shared/champs/pole_emploi/contact', locals: { scope: scope, contact: champ.data[scope] }
      - when 'inscription'
        = render partial: 'shared/champs/pole_emploi/inscription', locals: { scope: scope, inscription: champ.data[scope] }
