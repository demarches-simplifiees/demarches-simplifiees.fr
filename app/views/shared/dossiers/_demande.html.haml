- if dossier.france_connected_with_one_identity? && current_user.instructeur? && !current_user.owns_or_invite?(dossier)
  - content_for(:notice_info) do
    = render partial: "shared/dossiers/france_connect_informations_notice", locals: { user_information: dossier.user.france_connect_informations.first }

.counter-start-header-section.dossier-show.gallery.gallery-demande{ class: class_names("dossier-show-instructeur" => profile =="instructeur"), "data-controller": "lightbox clipboard2", "data-clipboard2-copy-text-value": t('clipboard.copy'), "data-clipboard2-copied-text-value": t('clipboard.copied') }

  - if profile == 'instructeur' && dossier.termine_and_accuse_lecture?
    = render Dsfr::CalloutComponent.new(title: nil) do |c|
      - c.with_html_body do
        = t('views.shared.dossiers.demande.accuse_lecture')
        - if dossier.accuse_lecture_agreement_at.present?
          = t('views.shared.dossiers.demande.accuse_lecture_with_agreement', agreement: l(dossier.accuse_lecture_agreement_at, format: :long))
        - else
          = t('views.shared.dossiers.demande.accuse_lecture_without_agreement')

  %h2.fr-h6.fr-background-alt--grey.fr-mb-0
    .flex-grow.fr-py-3v.fr-px-2w= t('views.shared.dossiers.demande.history')

  - if dossier.depose_at.present?
    = render partial: "shared/dossiers/infos_generales", locals: { dossier: dossier, profile: profile }


  - if dossier.for_tiers?
    .fr-background-alt--grey.flex
      %h2#mandataire_identity.fr-h6.fr-mb-0.flex-grow.fr-py-3v.fr-px-2w= t('views.shared.dossiers.demande.mandataire_identity')

      - if dossier.individual.present? && profile == 'usager' && !dossier.read_only?
        = link_to t('views.shared.dossiers.demande.edit_identity_html'), identite_dossier_path(dossier), class: 'fr-py-3v fr-btn fr-btn--tertiary-no-outline', id: 'edit_mandataire_identity', 'aria-labelledby': 'edit_mandataire_identity mandataire_identity'


    = render partial: "shared/dossiers/mandataire_infos", locals: { user_deleted: dossier.user_deleted?, email: dossier.user_email_for(:display), dossier: dossier }

  .tab-title
    .fr-background-alt--grey.flex
      %h2#requester_identity.fr-h6.fr-mb-0.flex-grow.fr-py-3v.fr-px-2w
        = t('views.shared.dossiers.demande.requester_identity')

        - if dossier.identity_updated_at.present? && demande_seen_at&.<(dossier.identity_updated_at)
          %span.fr-badge.fr-badge--new.fr-badge--sm
            = t('views.shared.dossiers.demande.requester_identity_updated_at', date: try_format_datetime(dossier.identity_updated_at))

      - if dossier.etablissement.present? && profile == 'usager' && !dossier.read_only?
        = link_to t('views.shared.dossiers.demande.edit_siret'), siret_dossier_path(dossier), class: 'fr-py-3v fr-btn fr-btn--tertiary-no-outline'

      - if dossier.individual.present? && profile == 'usager' && !dossier.read_only?
        = link_to t('views.shared.dossiers.demande.edit_identity_html'), identite_dossier_path(dossier), class: 'fr-py-3v fr-btn fr-btn--tertiary-no-outline', id: 'edit_requester_identity', 'aria-labelledby': 'edit_requester_identity requester_identity'


  %dl.fr-pl-0
    = render partial: "shared/dossiers/user_infos", locals: { user_deleted: dossier.user_deleted?, email: dossier.user_email_for(:display), for_tiers: dossier.for_tiers?, beneficiaire_mail: dossier.for_tiers? ? dossier.individual.email : ""}

    - if dossier.individual.present?
      = render partial: "shared/dossiers/identite_individual", locals: { dossier: dossier }

  - if dossier.etablissement.present?
    - etablissement = dossier.etablissement
    .fr-mt-1w.fr-mb-4w.fr-px-2w
      - if etablissement.as_degraded_mode?
        = render Dossiers::DegradedIdentiteEntrepriseComponent.new(etablissement:, profile: @profile)
      - elsif @profile == 'usager'
        = render Dossiers::IdentiteEntrepriseForUsagerComponent.new(etablissement:)
      - else
        = render Dossiers::IdentiteEntrepriseComponent.new(etablissement:)

  %h2.fr-h6.fr-background-alt--grey.fr-mb-0.flex
    .flex-grow.fr-py-3v.fr-px-2w= t('views.shared.dossiers.demande.form')

  - types_de_champ = dossier.revision.types_de_champ_public
  - if types_de_champ.any? || dossier.procedure.routing_enabled?
    - champs = params[:submitted].present? ? dossier.submitted_tree : dossier.link_parent_children!.filter(&:public?)
    = render Dossiers::ChampsRowsShowComponent.new(champs: champs, seen_at: demande_seen_at, profile: profile)
