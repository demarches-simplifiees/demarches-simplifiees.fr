- if etablissement.as_degraded_mode?
  .fr-alert.fr-alert--warning.fr-alert--sm.fr-mb-2w
    %p
      LʼINSEE est indisponible, les informations sur lʼentreprise arriveront dʼici quelques heures.
      - if profile == "instructeur"
        %p
          Il nʼest pas possible dʼaccepter ou de refuser un dossier sans cette étape.

%div{ class: class_names("fr-background-alt--grey fr-p-3v" => !local_assigns[:short_identity]) }
  - if etablissement.as_degraded_mode?
    = render Dossiers::RowShowComponent.new(label: "SIRET") do |c|
      - c.with_value do
        %p #{pretty_siret(etablissement.siret)} #{ render Dsfr::CopyButtonComponent.new(text: etablissement.siret, title: "Copier le siret dans le presse-papier", success: "Le siret a été copié dans le presse-papier") }

  - else
    - if etablissement.diffusable_commercialement == false && profile != 'instructeur'
      = render Dossiers::RowShowComponent.new(label: nil) do |c|
        - c.with_value do
          %p= t('warning_for_private_info', scope: 'views.shared.dossiers.identite_entreprise', siret: pretty_siret(etablissement.siret))
    - else
      = render Dossiers::RowShowComponent.new(label: "Dénomination") do |c|
        - c.with_value do
          %p= raison_sociale_or_name(etablissement)

      = render Dossiers::RowShowComponent.new(label: "SIRET") do |c|
        - c.with_value do
          %p #{pretty_siret(etablissement.siret)} #{ render Dsfr::CopyButtonComponent.new(text: etablissement.siret, title: "Copier le siret dans le presse-papier", success: "Le siret a été copié dans le presse-papier") }


      - unless local_assigns[:short_identity]
        - if etablissement.entreprise.siret_siege_social.present? && etablissement.siret != etablissement.entreprise.siret_siege_social
          = render Dossiers::RowShowComponent.new(label: "SIRET du siège social") do |c|
            - c.with_value do
              %p
                = pretty_siret(etablissement.entreprise.siret_siege_social)
                = render Dsfr::CopyButtonComponent.new(text: etablissement.entreprise.siret_siege_social, title: "Copier le siret dans le presse-papier", success: "Le siret a été copié dans le presse-papier")

        = render Dossiers::RowShowComponent.new(label: "Forme juridique") do |c|
          - c.with_value do
            %p= sanitize(etablissement.entreprise.forme_juridique)

        = render Dossiers::RowShowComponent.new(label: "Libellé NAF") do |c|
          - c.with_value do
            %p= etablissement.libelle_naf

        = render Dossiers::RowShowComponent.new(label: "Libellé NAF") do |c|
          - c.with_value do
            %p= etablissement.naf

        = render Dossiers::RowShowComponent.new(label: "Date de création") do |c|
          - c.with_value do
            %p
              = try_format_date(etablissement.entreprise.date_creation)

              - if etablissement.entreprise_etat_administratif.present?
                %span.fr-badge.fr-badge--sm{ class: entreprise_etat_administratif_badge_class(etablissement) }
                  = humanized_entreprise_etat_administratif(etablissement)

        - if profile == 'instructeur'
          = render Dossiers::RowShowComponent.new(label: "Effectif mensuel #{try_format_mois_effectif(etablissement)} (URSSAF)") do |c|
            - c.with_value do
              %p= etablissement.entreprise_effectif_mensuel

          = render Dossiers::RowShowComponent.new(label: "Effectif moyen annuel #{etablissement.entreprise_effectif_annuel_annee} (URSSAF)") do |c|
            - c.with_value do
              %p= etablissement.entreprise_effectif_annuel

          = render Dossiers::RowShowComponent.new(label: "Effectif de l’organisation (INSEE)") do |c|
            - c.with_value do
              %p= effectif(etablissement)

          = render Dossiers::RowShowComponent.new(label: "Numéro de TVA intracommunautaire") do |c|
            - c.with_value do
              %p= etablissement.entreprise.numero_tva_intracommunautaire

          = render Dossiers::RowShowComponent.new(label: "Adresse") do |c|
            - c.with_value do
              %p
                - etablissement.adresse.split("\n").compact_blank.each do |line|
                  = line
                  %br

          = render Dossiers::RowShowComponent.new(label: "Capital social") do |c|
            - c.with_value do
              %p= pretty_currency(etablissement.entreprise.capital_social)

        - if etablissement.exercices.any?
          = render Dossiers::RowShowComponent.new(label: "Chiffre d’affaires") do |c|
            - c.with_value do
              - if profile == 'instructeur'
                %details
                  - etablissement.exercices.each_with_index do |exercice, index|
                    = "#{exercice.date_fin_exercice.year} : "
                    = pretty_currency(exercice.ca)
                    %br
              - elsif etablissement.exercices.present?
                = t('activemodel.models.exercices_summary', count: etablissement.exercices.count)

        - if etablissement.entreprise_bilans_bdf.present?
          - if profile == 'instructeur'
            = render partial: 'shared/dossiers/identite_entreprise_bilan_detail',
              locals: { libelle: 'Résultat exercice', key: 'resultat_exercice', etablissement: etablissement }

            = render partial: 'shared/dossiers/identite_entreprise_bilan_detail',
              locals: { libelle: "Excédent brut d’exploitation", key: 'excedent_brut_exploitation', etablissement: etablissement }

            = render partial: 'shared/dossiers/identite_entreprise_bilan_detail',
              locals: { libelle: 'Fonds de roulement net global', key: 'fonds_roulement_net_global', etablissement: etablissement }

            = render partial: 'shared/dossiers/identite_entreprise_bilan_detail',
              locals: { libelle: 'Besoin en fonds de roulement', key: 'besoin_en_fonds_de_roulement', etablissement: etablissement }

            = render Dossiers::RowShowComponent.new(label: "Chiffres financiers clés (Banque de France) en #{pretty_currency_unit(etablissement.entreprise_bilans_bdf_monnaie)}") do |c|
              - c.with_value do
                - if controller.is_a?(Instructeurs::AvisController)
                  %p
                    Les consulter
                    = link_to "au format csv", bilans_bdf_instructeur_avis_path(@avis, format: 'csv')
                    ,
                    = link_to "au format xlsx", bilans_bdf_instructeur_avis_path(@avis, format: 'xlsx')
                    ou
                    = link_to "au format ods", bilans_bdf_instructeur_avis_path(@avis, format: 'ods')
                - else
                  %p
                    Les consulter
                    = link_to "au format csv", bilans_bdf_instructeur_dossier_path(procedure_id: @dossier.procedure.id, dossier_id: @dossier.id, format: 'csv')
                    ,
                    = link_to "au format xlsx", bilans_bdf_instructeur_dossier_path(procedure_id: @dossier.procedure.id, dossier_id: @dossier.id, format: 'xlsx')
                    ou
                    = link_to "au format ods", bilans_bdf_instructeur_dossier_path(procedure_id: @dossier.procedure.id, dossier_id: @dossier.id, format: 'ods')
          - else
            = render Dossiers::RowShowComponent.new(label: "Bilans Banque de France") do |c|
              - c.with_value do
                %p Les 3 derniers bilans connus de votre entreprise par la Banque de France ont été joints à votre dossier.

        - if etablissement.entreprise_attestation_sociale.attached?
          = render Dossiers::RowShowComponent.new(label: "Attestation sociale") do |c|
            - c.with_value do
              - if profile == 'instructeur'
                %p= link_to "Consulter l'attestation", url_for(etablissement.entreprise_attestation_sociale), **external_link_attributes
              - else
                %p Une attestation de vigilance délivrée par l'ACOSS a été jointe à votre dossier.

        - if etablissement.entreprise_attestation_fiscale.attached?
          = render Dossiers::RowShowComponent.new(label: "Attestation fiscale") do |c|
            - c.with_value do
              - if profile == 'instructeur'
                %p= link_to "Consulter l'attestation", url_for(etablissement.entreprise_attestation_fiscale), **external_link_attributes
              - else
                %p Une attestation fiscale délivrée par l'URSSAF a été jointe à votre dossier.

        - if etablissement.association?
          = render Dossiers::RowShowComponent.new(label: "Numéro RNA") do |c|
            - c.with_value do
              %p= etablissement.association_rna

          = render Dossiers::RowShowComponent.new(label: "Titre") do |c|
            - c.with_value do
              %p= etablissement.association_titre

          = render Dossiers::RowShowComponent.new(label: "Objet") do |c|
            - c.with_value do
              %p= etablissement.association_objet

          = render Dossiers::RowShowComponent.new(label: "Date de création") do |c|
            - c.with_value do
              %p= try_format_date(etablissement.association_date_creation)

          = render Dossiers::RowShowComponent.new(label: "Date de publication") do |c|
            - c.with_value do
              %p= try_format_date(etablissement.association_date_publication)

          = render Dossiers::RowShowComponent.new(label: "Date de déclaration") do |c|
            - c.with_value do
              %p= try_format_date(etablissement.association_date_declaration)

  - unless local_assigns[:short_identity]
    .champ-row
      %p
        = link_to "➡ Autres informations sur l’organisme sur « annuaire-entreprises.data.gouv.fr »",
          annuaire_link(etablissement.siret),
          **external_link_attributes
