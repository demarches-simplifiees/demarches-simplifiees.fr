- champs.reject(&:exclude_from_view?).each do |c|
  - if c.type_champ == TypeDeChamp.type_champs.fetch(:repetition)
    %tr
      %th.libelle.repetition{ colspan: 3 }
        = "#{c.libelle} :"
    - c.rows.each do |champs|
      = render partial: "shared/dossiers/champ_row", locals: { champs: champs, demande_seen_at: demande_seen_at, profile: profile, repetition: true }
      %tr
        %th{ colspan: 4 }
  - else
    %tr
      - if c.type_champ == TypeDeChamp.type_champs.fetch(:header_section)
        %th.header-section{ colspan: 3 }
          = c.libelle
      - else
        %th.libelle{ class: repetition ? 'padded' : '' }
          = "#{c.libelle} :"
        %td.rich-text
          %div{ class: highlight_if_unseen_class(demande_seen_at, c.updated_at) }
            - case c.type_champ
            - when TypeDeChamp.type_champs.fetch(:carte)
              = render partial: "shared/champs/carte/show", locals: { champ: c }
            - when TypeDeChamp.type_champs.fetch(:dossier_link)
              = render partial: "shared/champs/dossier_link/show", locals: { champ: c }
            - when TypeDeChamp.type_champs.fetch(:multiple_drop_down_list)
              = render partial: "shared/champs/multiple_drop_down_list/show", locals: { champ: c }
            - when TypeDeChamp.type_champs.fetch(:piece_justificative)
              = render partial: "shared/champs/piece_justificative/show", locals: { champ: c }
            - when TypeDeChamp.type_champs.fetch(:titre_identite)
              = render partial: "shared/champs/piece_justificative/show", locals: { champ: c }
            - when TypeDeChamp.type_champs.fetch(:siret)
              = render partial: "shared/champs/siret/show", locals: { champ: c, profile: profile }
            - when TypeDeChamp.type_champs.fetch(:textarea)
              = render partial: "shared/champs/textarea/show", locals: { champ: c }
            - when TypeDeChamp.type_champs.fetch(:date)
              = c.to_s
            - when TypeDeChamp.type_champs.fetch(:datetime)
              = c.to_s
            - when TypeDeChamp.type_champs.fetch(:number)
              = number_with_html_delimiter(c.to_s)
            - else
              = format_text_value(c.to_s)

      - if c.type_champ != TypeDeChamp.type_champs.fetch(:header_section)
        %td.updated-at
          %span{ class: highlight_if_unseen_class(demande_seen_at, c.updated_at) }
            modifié le
            = try_format_datetime(c.updated_at)
