= content_for(:page_id, 'auth')

= render partial: 'shared/social_login', locals: { title: t('views.registrations.new.social_title') }

.form-column.procedure-context-content
  .auth-form
    = devise_error_messages!
    = form_for resource, url: user_registration_path, html: { class: "fr-py-5w" } do |f|

      %h1.fr-h3= t('views.registrations.new.title', name: APPLICATION_NAME)

      -# = render partial: 'shared/france_connect_login', locals: { url: france_connect_particulier_path }

      %fieldset.fr-mb-0.fr-fieldset{ aria: { labelledby: 'create-account-legend' } }
        %legend.fr-fieldset__legend#create-account-legend
          %h2.fr-h6= I18n.t('views.registrations.new.subtitle')

        .fr-fieldset__element
          %p.fr-text--sm= t('utils.asterisk_html')

        .fr-fieldset__element= render Dsfr::InputComponent.new(form: f, attribute: :email, input_type: :email_field, opts: { autocomplete: 'email', autofocus: true })

        .fr-fieldset__element
          - data_opts = { controller: resource.validate_password_complexity? ? 'turbo-input' : false, turbo_input_url_value: show_password_complexity_path(resource.min_password_complexity) }
          = render Dsfr::InputComponent.new(form: f, attribute: :password, input_type: :password_field,
              opts: { autofocus: 'true', autocomplete: 'new-password', minlength: PASSWORD_MIN_LENGTH, data: data_opts }) do |c|
            - c.describedby do
              - if resource.validate_password_complexity?
                %div{ id: c.describedby_id }
                  #password_complexity
                    = render PasswordComplexityComponent.new
              - else
                = render partial: "devise/password_rules", locals: { id: c.describedby_id }

      = f.submit t('views.shared.account.create'), class: "fr-btn fr-btn--lg", id: "submit-password"
