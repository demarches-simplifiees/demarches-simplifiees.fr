- content_for(:title, "#{@procedure.libelle}")

#procedure-show
  .sub-header
    .container.flex

      .procedure-logo{ style: "background-image: url(#{@procedure.logo_url})",
        role: 'img', 'aria-label': "logo de la démarche #{@procedure.libelle}" }

      .procedure-header
        %h1= procedure_libelle @procedure
        = link_to 'gestion des notifications', email_notifications_instructeur_procedure_path(@procedure), class: 'header-link'
        |
        = link_to 'contacter les usagers en brouillon', email_usagers_instructeur_procedure_path(@procedure), class: 'header-link'
        |
        = link_to 'statistiques', stats_instructeur_procedure_path(@procedure), class: 'header-link'

        - if @procedure.routee?
          |
          - if current_administrateur.present? && current_administrateur.owns?(@procedure)
            = link_to 'instructeurs', admin_procedure_groupe_instructeurs_path(@procedure), class: 'header-link'
          - else
            = link_to 'instructeurs', instructeur_groupes_path(@procedure), class: 'header-link'

        %ul.tabs
          = tab_item('à suivre',
            instructeur_procedure_path(@procedure, statut: 'a-suivre'),
            active: @statut == 'a-suivre',
            badge: number_with_html_delimiter(@a_suivre_count))

          = tab_item(t('pluralize.followed', count: @suivis_count),
            instructeur_procedure_path(@procedure, statut: 'suivis'),
            active: @statut == 'suivis',
            badge: number_with_html_delimiter(@suivis_count),
            notification: @has_en_cours_notifications)

          = tab_item(t('pluralize.processed', count: @traites_count),
            instructeur_procedure_path(@procedure, statut: 'traites'),
            active: @statut == 'traites',
            badge: number_with_html_delimiter(@traites_count),
            notification: @has_termine_notifications)

          = tab_item('au total',
            instructeur_procedure_path(@procedure, statut: 'tous'),
            active: @statut == 'tous',
            badge: number_with_html_delimiter(@tous_count))

          = tab_item(t('pluralize.archived', count: @archives_count),
            instructeur_procedure_path(@procedure, statut: 'archives'),
            active: @statut == 'archives',
            badge: number_with_html_delimiter(@archives_count))

      .procedure-actions
        = render partial: "download_dossiers", locals: { procedure: @procedure, exports: @exports, dossier_count: @tous_count + @archives_count }

  .container
    - if @statut == 'a-suivre'
      %p.explication-onglet Aucun instructeur n’est affecté au suivi de ces dossiers. Soyez le premier !
    - if @statut == 'suivis'
      %p.explication-onglet Les dossiers qui sont dans cet onglet sont uniquement ceux que vous suivez. Vous pouvez échanger avec le demandeur jusqu'à pouvoir les accepter, les refuser ou les classer sans suite.
    - if @statut == 'traites'
      %p.explication-onglet Les dossiers dans cet onglet sont terminés : ils ont été acceptés, refusés ou classés sans suite.
    - if @statut == 'tous'
      %p.explication-onglet Tous les dossiers qui ont été déposés sur cette démarche, quel que soit le statut.
    - if @statut == 'archives'
      %p.explication-onglet
        Les dossiers de cet onglet sont archivés : vous ne pouvez plus y répondre, et les demandeurs ne peuvent plus les modifier.
        %br
        Ces dossiers seront supprimés lorsque leur délai de conservation dans Démarches-simplifiées
        - if @procedure.duree_conservation_dossiers_dans_ds
          = "(#{@procedure.duree_conservation_dossiers_dans_ds} mois)"
        sera expiré.
        = link_to 'En savoir plus', ARCHIVAGE_DOC_URL
      .afficher-dossiers-supprimes
        = link_to deleted_dossiers_instructeur_procedure_path(@procedure) do
          %span.icon.delete
          Afficher les dossiers supprimés

    - if @filtered_sorted_paginated_ids.present? || @current_filters.count > 0
      - pagination =  paginate @filtered_sorted_paginated_ids
      = pagination
      %span.dropdown
        %button.button.dropdown-button{ 'aria-expanded' => 'false', 'aria-controls' => 'filter-menu' }
          Filtrer
        #filter-menu.dropdown-content.left-aligned.fade-in-down
          = form_tag add_filter_instructeur_procedure_path(@procedure), method: :post, class: 'dropdown-form large' do
            = label_tag :field,  "Colonne"
            = select_tag :field, options_for_select(@displayed_fields_options)
            %br
            = label_tag :value, "Valeur"
            = text_field_tag :value, nil, maxlength: ProcedurePresentation::FILTERS_VALUE_MAX_LENGTH
            = hidden_field_tag :statut, @statut
            %br
            = submit_tag "Ajouter le filtre", class: 'button'

      - @current_filters.group_by { |filter| filter['table'] }.each_with_index do |(table, filters), i|
        - if i > 0
          et
        - filters.each_with_index do |filter, i|
          - if i > 0
            ou
          %span.filter
            = link_to remove_filter_instructeur_procedure_path(@procedure, { statut: @statut, field: "#{filter['table']}/#{filter['column']}", value: filter['value'] }) do
              %img.close-icon{ src: image_url("close.svg") }
            = "#{filter['label'].truncate(50)} : #{@procedure_presentation.human_value_for_filter(filter)}"
      %table.table.dossiers-table.hoverable
        %thead
          %tr
            - if @statut.in? %w(suivis traites tous)
              = render partial: "header_field", locals: { field: { "label" => "●", "table" => "notifications", "column" => "notifications" }, classname: "notification-col" }
            - else
              %th.notification-col

            = render partial: "header_field", locals: { field: { "label" => "Nº dossier", "table" => "self", "column" => "id" }, classname: "number-col" }

            - @procedure_presentation.displayed_fields.each do |field|
              = render partial: "header_field", locals: { field: field, classname: "" }

            = render partial: "header_field", locals: { field: { "label" => "Statut", "table" => "self", "column" => "state" },  classname: "status-col" }

            %th.action-col.follow-col
              %span.dropdown
                %button.button.dropdown-button{ 'aria-expanded' => 'false', 'aria-controls' => 'custom-menu' }
                  Personnaliser
                #custom-menu.dropdown-content.fade-in-down
                  = form_tag update_displayed_fields_instructeur_procedure_path(@procedure), method: :patch, class: 'dropdown-form large columns-form' do
                    - hidden_field_id = SecureRandom.uuid
                    = hidden_field_tag :values, nil, data: { uuid: hidden_field_id }
                    = react_component("ComboMultipleDropdownList", options: @displayed_fields_options, selected: @displayed_fields_selected, disabled: [], hiddenFieldId: hidden_field_id, label: 'colonne')

                    = submit_tag "Enregistrer", class: 'button'

        %tbody
          - @projected_dossiers.each do |p|
            - path = instructeur_dossier_path(@procedure, p.dossier_id)

            %tr
              %td.folder-col
                %a.cell-link{ href: path }
                  %span.icon.folder
                    - if @not_archived_notifications_dossier_ids.include?(p.dossier_id)
                      %span.notifications{ 'aria-label': 'notifications' }

              %td.number-col
                %a.cell-link{ href: path }= p.dossier_id

              - p.columns.each do |column|
                %td
                  %a.cell-link{ href: path }= column

              %td.status-col
                %a.cell-link{ href: path }= status_badge(p.state)

              %td.action-col.follow-col= render partial: 'dossier_actions',
                locals: { procedure_id: @procedure.id,
                          dossier_id: p.dossier_id,
                          state: p.state,
                          archived: p.archived,
                          dossier_is_followed: @followed_dossiers_id.include?(p.dossier_id) }

      = pagination
    - else
      %h2.empty-text Aucun dossier
