- if @coordinate.present?
  - if @coordinate.parent.present?
    - c = TypesDeChampEditor::SelectChampTemplatePositionComponent.new(block: @coordinate.parent, coordinates: @coordinate.parent.revision_types_de_champ)
  - else
    - c = TypesDeChampEditor::SelectChampTemplatePositionComponent.new(block: @coordinate.revision, coordinates: @coordinate.private? ? @coordinate.revision.revision_types_de_champ_private : @coordinate.revision.revision_types_de_champ_public)

  = turbo_stream.replace(c.block_id) do
    = render c
= turbo_stream.replace 'breadcrumbs' , render(partial: 'administrateurs/breadcrumbs',
  locals: { steps: [['DÃ©marches', admin_procedures_path],
                    [@procedure.libelle.truncate_words(10), admin_procedure_path(@procedure)],
                    ['Configuration des champs']],
  preview: @procedure.draft_revision.valid? })

= turbo_stream.replace 'errors-summary', render(TypesDeChampEditor::ErrorsSummary.new(revision: @procedure.draft_revision))

= turbo_stream.replace 'summary', render(partial: 'administrateurs/procedures/champs_summary')

- unless flash.alert
  = turbo_stream.show 'autosave-notice'
  = turbo_stream.replace 'autosave-notice', render(partial: 'administrateurs/autosave_notice')
  = turbo_stream.hide 'autosave-notice', delay: 30000

- if @destroyed.present?
  = turbo_stream.remove dom_id(@destroyed, :type_de_champ_editor)

  - if @destroyed.siblings.empty?
    = turbo_stream.show('empty-coordinates')

- if @created.present?
  - if @created.coordinate.previous_sibling.present?
    = turbo_stream.after dom_id(@created.coordinate.previous_sibling, :type_de_champ_editor) do
      - render @created
  - else
    = turbo_stream.prepend dom_id(@created.coordinate.block, :types_de_champ_editor_block) do
      - render @created

  = turbo_stream.hide('empty-coordinates')

- @morphed&.each do |champ_component|
  = turbo_stream.replace dom_id(champ_component.coordinate, :type_de_champ_editor) do
    - render champ_component

- if @coordinate.present?
  = turbo_stream.replace dom_id(@coordinate.revision, :estimated_fill_duration) do
    - render TypesDeChampEditor::EstimatedFillDurationComponent.new(revision: @coordinate.revision, is_annotation: @coordinate.private?)

- if @created&.coordinate&.child?
  = turbo_stream.hide dom_id(@created.coordinate.parent, :type_de_champ_add_button)
- elsif @destroyed&.child? && @destroyed.parent.empty?
  = turbo_stream.show dom_id(@destroyed.parent, :type_de_champ_add_button)
