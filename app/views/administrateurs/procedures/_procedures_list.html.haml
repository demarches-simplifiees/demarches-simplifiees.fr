- procedures.each do |procedure|
  .card
    .admin-procedures-list-row.infos.flex
      - if procedure.logo.present?
        = image_tag procedure.logo, alt: procedure.libelle, width: '100'
      .flex.column.ml-1
        .card-title
          = link_to procedure.libelle, admin_procedure_path(procedure), style: 'color: black;'
        = link_to commencer_url(procedure.path), commencer_url(procedure.path), class: 'fr-link fr-mb-1w'

      .admin-procedures-list-timestamps
        %p.notice N° #{procedure.id}
        %p.notice créée le #{procedure.created_at.strftime('%d/%m/%Y')}
        - if procedure.published_at.present?
          %p.notice publiée le #{procedure.published_at.strftime('%d/%m/%Y')}

        - if procedure.updated_at.today?
          %p.notice modifiée à #{procedure.updated_at.strftime('%H:%M')}
        - else
          %p.notice modifiée le #{procedure.updated_at.strftime('%d/%m/%Y %H:%M')}

        - if procedure.closed_at.present?
          %p.notice archivée le #{procedure.closed_at.strftime('%d/%m/%Y')}
        - elsif procedure.auto_archive_on&.future?
          %p.notice sera clôturée le #{procedure.auto_archive_on.strftime('%d/%m/%Y')}

    .admin-procedures-list-row.actions.flex.justify-between
      %div
        - if procedure.routing_enabled?
          %span.icon.person
          %span.badge.baseline= procedure.groupe_instructeurs.count
        - else
          %span.icon.person
          %span.badge.baseline= procedure.instructeurs.count

        %span.icon.folder
        %span.badge.baseline= procedure.dossiers.state_not_brouillon.visible_by_administration.count

      %ul.fr-btns-group.fr-btns-group--sm.fr-btns-group--inline.fr-btns-group--icon-right
        - unless procedure.discarded?
          %li
            = link_to admin_procedure_path(procedure), class: 'fr-btn fr-icon-draft-line fr-btn--tertiary' do
              Modifier

        = render Dropdown::MenuComponent.new(wrapper: :li, button_options: { class: ['fr-btn--tertiary'] }, menu_options: { id: dom_id(procedure, :actions_menu)}) do |menu|
          - menu.with_button_inner_html do
            Actions

          - if !procedure.close? && !procedure.discarded?
            - menu.with_item do
              = link_to commencer_url(path: procedure.path), target: :blank, rel: :noopener, role: 'menuitem' do
                %span.icon.in-progress
                .dropdown-description
                  %h4= t('administrateurs.dropdown_actions.to_test')

          - if !procedure.discarded?
            - menu.with_item do
              = link_to(admin_procedure_clone_path(procedure.id), role: 'menuitem', class: 'clone-btn', data: { method: :put }) do
                %span.icon.new-folder
                .dropdown-description
                  %h4= t('administrateurs.dropdown_actions.to_clone')

          - if procedure.publiee?
            - menu.with_item do
              = link_to(admin_procedure_close_path(procedure_id: procedure.id), role: 'menuitem') do
                %span.icon.archive
                .dropdown-description
                  %h4= t('administrateurs.dropdown_actions.to_close')

          - if procedure.can_be_deleted_by_administrateur? && !procedure.discarded?
            - menu.with_item do
              = link_to admin_procedure_path(procedure), role: 'menuitem', method: :delete, data: { confirm: "Voulez-vous vraiment supprimer la démarche ? \nToute suppression est définitive et s'appliquera aux éventuels autres administrateurs de cette démarche !" } do
                %span.icon.refuse
                .dropdown-description
                  %h4= t('administrateurs.dropdown_actions.delete')

          - if procedure.discarded?
            - menu.with_item do
              = link_to  restore_admin_procedure_path(procedure), role: 'menuitem',  method: :put do
                %span.icon.unarchive
                .dropdown-description
                  %h4= t('administrateurs.dropdown_actions.restore')

