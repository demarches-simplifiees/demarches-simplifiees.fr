= render Dsfr::ListComponent.new do |list|
  - list.with_empty do
    = t(:no_changes, scope: [:administrateurs, :revision_changes])

  = render partial: "administrateurs/procedures/revision_change_type_de_champ", collection: changes, as: :change, locals: { list: list }
  - move_changes, move_private_changes = changes.filter { _1.op == :move }.partition { !_1.private? }
  - if move_changes.present?
    - list.with_item do
      = t(:move, scope: [:administrateurs, :revision_changes], count: move_changes.size)
  - if move_private_changes.present?
    - list.with_item do
      = t(:move_private, scope: [:administrateurs, :revision_changes], count: move_private_changes.size)
