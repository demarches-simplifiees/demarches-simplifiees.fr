- if opt.keys.include?(:instruction)
  = render Dropdown::MenuComponent.new(wrapper: :div, wrapper_options: { data: {controller: 'menu-button', popover: 'true', operation: opt[:operation]} }, menu_options: { id: "dropdown_batch" }, button_options: { disabled: true, data: { batch_operation_target: "dropdown" }, class: "fr-btn fr-btn--sm fr-ml-1w"}, role: :region ) do |menu|
    - menu.with_button_inner_html do
      = t(".labels.instruction")

      - opt[:instruction].each do |opt|
        - menu.with_item do
          = link_to('#', onclick: "DS.showMotivation(event, '#{opt[:instruction_operation]}');", role: 'menuitem') do
            %span{ class: "icon #{opt[:operation_class_name]}" }
            .dropdown-description
              %h4= opt[:label]
              = opt[:operation_description]

        - menu.with_item(class: "hidden inactive form-inside fr-pt-1v") do
          = render partial: 'instructeurs/dossiers/instruction_button_motivation_batch', locals: { instruction_operation: opt[:instruction_operation], form:, opt: }
- else
  = form.button opt[:label], class: ['fr-btn fr-btn--sm fr-btn--icon-left fr-ml-1w', icons[opt[:operation].to_sym]], disabled: true, name: "#{form.object_name}[operation]", value: opt[:operation], data: { operation: opt[:operation] }
