- if auto_switch?
  :javascript
    const hintUrl = "http://#{ApplicationHelper::APP_HOST}/favicon.ico"

    fetch(hintUrl, { mode: 'cors' }).then(() => {
      window.location = '#{new_host_url}';
    }).catch((e) => {
      const error = new Error("Connection test on new host failed: " + e);
      const event = new CustomEvent("sentry:capture-exception", { detail: error });
      setTimeout(() => dispatchEvent(event), 100); // listener is not immediately enabled
    })


= render Dsfr::NoticeComponent.new(closable: true, data_attributes: { "data-switch-domain-notice" => true }) do |c|
  - c.with_title do
    = t(".message_new_domain")
    = "#{helpers.link_to APPLICATION_NAME, new_host_url}."

    - if manual_switch?
      = t(".follow_link")
    - elsif auto_switch? || true
      = t(".detected_error")

- if user && !user.preferred_domain_demarches_gouv_fr? && requested_from_new_domain?
  = form_tag(helpers.preferred_domain_path, method: :patch, remote: true, name: "update-preferred-domain")
  :javascript
    document.addEventListener('noticeClosed', function(e) {
      document.forms['update-preferred-domain'].submit();
    });
