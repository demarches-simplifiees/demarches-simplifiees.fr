%div{ id: }
  .fr-grid-row
    .fr-col-7.fr-pr-2w.flex.column.flex-gap-2
      - filters_selects.each do |filter_select|
        .fr-card.fr-p-2w
          = form_with url: refresh_filters_instructeur_procedure_presentation_path(@procedure_presentation), data: { turbo: true }, id: "form-#{filter_select[:label].parameterize}" do |form|
            = filters_in_hidden_inputs(form, filter_select[:label].parameterize)
            .flex.align-end.flex-gap-2
              .flex.flex-1.column
                = form.label "filters_columns[]", filter_select[:label], class: "fr-label", for: "select-#{filter_select[:label].parameterize}"
                = form.select "filters_columns[]", filter_select[:items], { prompt: t('.select'), required: true, disabled: disabled_items, selected: "" }, class: 'fr-select width-100', id:  "select-#{filter_select[:label].parameterize}"
              = form.submit t('.add'), class: "fr-btn"

    .fr-col-5
      .bg-alt-grey.rounded-4.fr-p-2w
        %h4 Votre sélection de critères
        %p Vous pouvez classer les critères pour choisir dans quel ordre ils seront affichés.
        .flex.column.flex-gap-2
          - filters_columns.each do |filter_column|
            .filter-box{ id: filter_column.id.parameterize }
              %p.fr-mb-0= filter_column.label
              = delete_button(filter_column)

  = form_with url: persist_filters_instructeur_procedure_presentation_path(@procedure_presentation), id: "save-filters-form", data: { turbo: true, turbo_force: :server }  do |form|
    = filters_in_hidden_inputs(form, "save-filters-form")
