= form_for user, url: { controller: 'users/activate', action: :create }, html: { class: "fr-py-5w" } do |f|

  %h1.fr-h2.fr-mb-7w= t('.title', application_name: Current.application_name)

  .fr-background-alt--grey.fr-px-12w.fr-py-7w
    %fieldset.fr-mb-0.fr-fieldset{ aria: { labelledby: 'activate-account-legend' } }

      %legend.fr-fieldset__legend#activate-account-legend
        %h2.fr-h6.fr-mb-0= t('.activate', email: user.email)

      .fr-fieldset__element
        %p.fr-text--sm= t('utils.mandatory_champs')

      .fr-fieldset__element
        = render Dsfr::InputComponent.new(form: f, attribute: :email, input_type: :email_field, opts: { disabled: :disabled, class: 'fr-input-group--disabled' })

      .fr-fieldset__element
        = render Dsfr::InputComponent.new(form: f, attribute: :password, input_type: :password_field,
          opts: { autofocus: 'true', autocomplete: 'new-password', data: { controller: 'turbo-input', turbo_input_url_value: show_password_complexity_path }})

        #password_complexity
          = render PasswordComplexityComponent.new

      = f.hidden_field :reset_password_token, value: params[:token]

      = f.submit t('.submit'), id: 'submit-password', disabled: :disabled, class: "fr-btn fr-btn--lg fr-mt-2w", data: { disabled: :disabled, disable_with: t('views.users.passwords.edit.submit_loading') }
