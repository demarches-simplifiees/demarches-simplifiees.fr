.flex.column.justify-between{id:}
  = operator_hidden_field
  - if boolean?
    = render Dsfr::RadioButtonListComponent.new(form:,
      target: "filter[filter][value][]",
      buttons: column_filter_options.map { |label, value| { label:, value: } }) do
      = label

  - elsif is_date?
    .flex.flex-gap-2
      .flex.column
        
        = form.label "filter[filter][operator]", edit_mode ? filtered_column&.label : t('.operator'), class: 'fr-label'
        = form.select "filter[filter][operator]",
          options_for_select(date_filter_options, selected: operator), {}, { class: 'fr-select', data: { autosubmit_target: 'input', } }
      - if is_operator_with_value?
        .flex.column
          = form.label :value, edit_mode ? t(".operators.#{operator}") : t('.value'), class: 'fr-label'
          = form.text_field "filter[filter][value][]",
            id: 'value',
            class: 'fr-input',
            type: 'date',
            value:,
            data: { autosubmit_target: 'input' },
            required: true

  - elsif selectable?
    = form.label :value, label, class: 'fr-label'
    %react-fragment
      = render ReactComponent.new "ComboBox/MultiComboBox", **react_props

  - else
    = form.label :value, label, class: 'fr-label'
    = form.text_field "filter[filter][value][]",
      id: 'value',
      class: 'fr-input',
      type:,
      value:,
      disabled: column.nil?,
      maxlength: FilteredColumn::FILTERS_VALUE_MAX_LENGTH,
      data: { autosubmit_target: 'input' },
      required: !edit_mode
